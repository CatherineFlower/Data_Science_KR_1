2025-10-05 15:38:29,973 ERROR ddos_app.db - ensure_admin_from_env: ADMIN_LOGIN/PASSWORD not set
2025-10-05 15:38:30,084 ERROR ddos_app.db - DB connect ERROR: connection to server at "127.0.0.1", port 5432 failed: ВАЖНО:  пользователь "postgres" не прошёл проверку подлинности (по паролю)

2025-10-05 15:39:15,557 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:39:24,455 INFO ddos_app.db - TXN: ALTER TABLE app.app_user DROP COLUMN "id" params=()
2025-10-05 15:39:39,508 INFO ddos_app.db - TXN: ALTER TABLE app.app_user DROP COLUMN "is_admin" params=()
2025-10-05 15:40:11,909 INFO ddos_app.db - DML: register_user login=asd
2025-10-05 15:41:17,100 ERROR ddos_app.db - ensure_admin_from_env: schema not ready
2025-10-05 15:41:17,134 INFO ddos_app.db - AUTH ephemeral admin via .env
2025-10-05 15:41:22,630 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:41:26,837 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:41:35,019 ERROR ddos_app.db - ensure_admin_from_env: schema not ready
2025-10-05 15:41:35,052 INFO ddos_app.db - AUTH ephemeral admin via .env
2025-10-05 15:41:40,285 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-05 15:41:40,322 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-05 15:41:40,323 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-05 15:41:40,323 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-05 15:41:40,323 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-05 15:41:40,325 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-05 15:41:40,333 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-05 15:41:40,343 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-05 15:41:40,347 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-05 15:41:40,347 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-05 15:41:40,348 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-05 15:41:40,352 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-05 15:41:40,353 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-05 15:41:40,353 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-05 15:41:40,356 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-05 15:41:40,357 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-05 15:41:40,359 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-05 15:41:40,359 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-05 15:41:40,361 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-05 15:41:40,362 INFO ddos_app.db - Executed 18 statements from ddl.sql
2025-10-05 15:41:40,364 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-05 15:41:40,364 INFO ddos_app.db - Create schema done: statements=18
2025-10-05 15:41:48,612 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:41:48,646 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:41:54,338 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:41:54,373 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:41:56,275 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:41:56,310 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:41:56,348 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:43:19,086 INFO ddos_app.db - DML: register_user login=asd
2025-10-05 15:43:21,753 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:43:29,910 INFO ddos_app.db - DML: add_domain user_id=2 domain=asd.ru
2025-10-05 15:43:40,724 INFO ddos_app.db - DML: add_domain user_id=2 domain=fsd.ru
2025-10-05 15:43:43,748 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:43:43,783 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:43:43,923 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:43:54,801 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:43:54,840 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-05 15:44:01,715 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user L INNER JOIN app.metric_sample R ON L."id" = R."domain_id" LIMIT 500 params=()
2025-10-05 15:44:51,261 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:44:51,296 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:44:51,334 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:44:53,790 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:44:53,828 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-05 15:44:58,128 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user L INNER JOIN app.metric_sample R ON L."id" = R."domain_id" LIMIT 500 params=()
2025-10-05 15:45:19,994 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-05 15:45:20,032 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-05 15:45:30,250 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain L INNER JOIN app.metric_sample R ON L."domain" = R."domain_id" LIMIT 500 params=()
2025-10-05 15:45:37,010 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain L INNER JOIN app.metric_sample R ON L."domain" = R."domain_id" LIMIT 500 params=()
2025-10-05 15:45:45,105 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain L INNER JOIN app.metric_sample R ON L."id" = R."domain_id" LIMIT 500 params=()
2025-10-05 15:46:43,711 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:46:43,745 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:46:50,519 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "id" LIKE %s LIMIT 500 params=()
2025-10-05 15:46:56,615 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "login" ILIKE %s LIMIT 500 params=()
2025-10-05 15:46:59,129 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "login" LIKE %s LIMIT 500 params=()
2025-10-05 15:47:03,909 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "login" LIKE %s LIMIT 500 params=()
2025-10-05 15:47:09,259 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "is_admin" LIKE %s LIMIT 500 params=()
2025-10-05 15:47:11,263 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-05 15:47:16,220 INFO ddos_app.db - SELECT: SELECT * FROM app.domain_state_log WHERE "prev_state" LIKE %s LIMIT 500 params=()
2025-10-05 15:47:18,645 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-05 15:47:21,761 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=()
2025-10-05 15:47:26,077 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 15:47:26,113 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-05 15:47:41,107 INFO ddos_app.db - SELECT: SELECT "login" AS original, UPPER("login") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-05 16:49:52,904 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-05 16:49:53,874 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-05 16:49:53,920 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-05 16:49:53,921 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-05 16:49:53,921 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-05 16:49:53,921 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-05 16:49:53,922 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-05 16:49:53,924 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-05 16:49:53,930 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-05 16:49:53,934 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-05 16:49:53,934 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-05 16:49:53,935 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-05 16:49:53,938 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-05 16:49:53,938 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-05 16:49:53,939 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-05 16:49:53,942 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-05 16:49:53,943 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-05 16:49:53,944 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-05 16:49:53,944 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-05 16:49:53,944 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-05 16:49:53,945 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-05 16:49:53,947 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-05 16:49:53,947 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-05 16:49:53,957 ERROR ddos_app.db - exec_sql_file ERROR: ОШИБКА:  значение фильтра "ALTER TABLE IF EXISTS" неприемлемо для переменной фильтра "tag"
CONTEXT:  SQL-оператор: "CREATE EVENT TRIGGER trg_block_protected_column_drop
    ON sql_drop
    WHEN TAG IN ('ALTER TABLE', 'ALTER TABLE IF EXISTS')
    EXECUTE PROCEDURE app.fn_block_protected_column_drop()"
функция PL/pgSQL inline_code_block, строка 6, оператор SQL-оператор

2025-10-05 16:49:53,957 ERROR ddos_app.db - exec_sql_file stack
Traceback (most recent call last):
  File "C:\Users\flexx\Downloads\Data_Science_KR_1-master_KR2_augmented\Data_Science_KR_1-master\src\db.py", line 202, in exec_sql_file
    cur.execute(st)
    ~~~~~~~~~~~^^^^
psycopg2.errors.SyntaxError: ОШИБКА:  значение фильтра "ALTER TABLE IF EXISTS" неприемлемо для переменной фильтра "tag"
CONTEXT:  SQL-оператор: "CREATE EVENT TRIGGER trg_block_protected_column_drop
    ON sql_drop
    WHEN TAG IN ('ALTER TABLE', 'ALTER TABLE IF EXISTS')
    EXECUTE PROCEDURE app.fn_block_protected_column_drop()"
функция PL/pgSQL inline_code_block, строка 6, оператор SQL-оператор

2025-10-05 16:50:44,276 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-05 16:50:44,414 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-05 16:50:44,415 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-05 16:50:44,415 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-05 16:50:44,415 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-05 16:50:44,415 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-05 16:50:44,418 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-05 16:50:44,424 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-05 16:50:44,427 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-05 16:50:44,427 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-05 16:50:44,428 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-05 16:50:44,431 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-05 16:50:44,431 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-05 16:50:44,432 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-05 16:50:44,435 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-05 16:50:44,436 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-05 16:50:44,436 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-05 16:50:44,436 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-05 16:50:44,437 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-05 16:50:44,438 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-05 16:50:44,440 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-05 16:50:44,440 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-05 16:50:44,447 ERROR ddos_app.db - exec_sql_file ERROR: ОШИБКА:  значение фильтра "ALTER TABLE IF EXISTS" неприемлемо для переменной фильтра "tag"
CONTEXT:  SQL-оператор: "CREATE EVENT TRIGGER trg_block_protected_column_drop
    ON sql_drop
    WHEN TAG IN ('ALTER TABLE', 'ALTER TABLE IF EXISTS')
    EXECUTE PROCEDURE app.fn_block_protected_column_drop()"
функция PL/pgSQL inline_code_block, строка 6, оператор SQL-оператор

2025-10-05 16:50:44,448 ERROR ddos_app.db - exec_sql_file stack
Traceback (most recent call last):
  File "C:\Users\flexx\Downloads\Data_Science_KR_1-master_KR2_augmented\Data_Science_KR_1-master\src\db.py", line 202, in exec_sql_file
    cur.execute(st)
    ~~~~~~~~~~~^^^^
psycopg2.errors.SyntaxError: ОШИБКА:  значение фильтра "ALTER TABLE IF EXISTS" неприемлемо для переменной фильтра "tag"
CONTEXT:  SQL-оператор: "CREATE EVENT TRIGGER trg_block_protected_column_drop
    ON sql_drop
    WHEN TAG IN ('ALTER TABLE', 'ALTER TABLE IF EXISTS')
    EXECUTE PROCEDURE app.fn_block_protected_column_drop()"
функция PL/pgSQL inline_code_block, строка 6, оператор SQL-оператор

2025-10-05 16:52:35,009 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-05 16:52:35,052 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-05 16:52:35,053 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-05 16:52:35,053 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-05 16:52:35,053 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-05 16:52:35,054 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-05 16:52:35,056 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-05 16:52:35,063 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-05 16:52:35,066 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-05 16:52:35,067 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-05 16:52:35,067 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-05 16:52:35,071 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-05 16:52:35,072 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-05 16:52:35,073 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-05 16:52:35,075 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-05 16:52:35,076 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-05 16:52:35,077 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-05 16:52:35,077 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-05 16:52:35,077 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-05 16:52:35,078 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-05 16:52:35,080 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-05 16:52:35,080 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-05 16:52:35,082 INFO ddos_app.db - Executed 21 statements from ddl.sql
2025-10-05 16:52:35,083 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-05 16:52:35,083 INFO ddos_app.db - Create schema done: statements=21
2025-10-05 16:52:39,994 INFO ddos_app.db - DML: add_domain user_id=1 domain=asd.re
2025-10-05 17:00:12,183 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 17:00:36,624 INFO ddos_app.db - TXN: ALTER TABLE app.tracked_domain DROP COLUMN "extra" params=()
2025-10-05 17:00:54,649 INFO ddos_app.db - TXN: ALTER TABLE app.metric_sample ADD COLUMN "trop" re params=()
2025-10-05 17:00:57,010 INFO ddos_app.db - TXN: ALTER TABLE app.metric_sample ADD COLUMN "trop" text params=()
2025-10-05 17:00:59,210 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-05 17:01:06,074 INFO ddos_app.db - TXN: ALTER TABLE app.metric_sample DROP COLUMN "trop" params=()
2025-10-12 10:42:58,787 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:42:58,823 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:42:58,892 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:42:58,930 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:43:52,990 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ADD COLUMN "chech" text NOT NULL params=()
2025-10-12 10:44:00,229 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ADD COLUMN "chech" text params=()
2025-10-12 10:44:01,811 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:44:01,849 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:44:05,481 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:44:05,516 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:44:08,543 INFO ddos_app.db - SELECT: SELECT "'b'", "chech" FROM app.app_user LIMIT 500 params=()
2025-10-12 10:44:10,654 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:44:10,687 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:44:10,753 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:44:10,791 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:44:16,330 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" DROP COLUMN "'b'" params=()
2025-10-12 10:44:19,029 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:44:19,062 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:44:19,128 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:44:19,167 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:44:22,074 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" DROP COLUMN "id" params=()
2025-10-12 10:44:26,603 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" DROP COLUMN "is_admin" params=()
2025-10-12 10:46:11,363 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-12 10:46:12,396 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-12 10:46:12,432 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-12 10:46:12,433 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-12 10:46:12,434 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-12 10:46:12,434 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-12 10:46:12,435 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-12 10:46:12,438 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-12 10:46:12,444 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-12 10:46:12,448 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-12 10:46:12,449 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-12 10:46:12,450 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-12 10:46:12,452 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-12 10:46:12,453 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-12 10:46:12,453 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-12 10:46:12,456 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-12 10:46:12,456 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-12 10:46:12,457 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-12 10:46:12,458 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-12 10:46:12,459 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-12 10:46:12,460 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-12 10:46:12,462 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-12 10:46:12,462 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-12 10:46:12,465 INFO ddos_app.db - Executed 21 statements from ddl.sql
2025-10-12 10:46:12,468 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-12 10:46:12,468 INFO ddos_app.db - Create schema done: statements=21
2025-10-12 10:46:24,978 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:46:25,012 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:46:25,180 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:46:25,219 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:48:25,406 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:48:25,539 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:48:25,607 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:48:25,645 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:48:28,898 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" DROP COLUMN "is_admin" params=()
2025-10-12 10:48:34,308 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:48:34,342 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:48:39,854 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-12 10:48:40,775 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-12 10:48:40,808 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-12 10:48:40,809 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-12 10:48:40,809 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-12 10:48:40,809 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-12 10:48:40,810 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-12 10:48:40,812 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-12 10:48:40,818 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-12 10:48:40,822 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-12 10:48:40,823 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-12 10:48:40,824 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-12 10:48:40,826 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-12 10:48:40,827 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-12 10:48:40,827 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-12 10:48:40,830 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-12 10:48:40,831 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-12 10:48:40,831 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-12 10:48:40,832 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-12 10:48:40,833 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-12 10:48:40,833 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-12 10:48:40,835 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-12 10:48:40,835 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-12 10:48:40,837 INFO ddos_app.db - Executed 21 statements from ddl.sql
2025-10-12 10:48:40,838 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-12 10:48:40,838 INFO ddos_app.db - Create schema done: statements=21
2025-10-12 10:49:56,616 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:49:56,650 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:49:56,717 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:49:57,104 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:50:01,934 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 10:50:02,093 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'protected_column')
2025-10-12 10:50:05,214 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 10:50:05,533 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-12 10:50:39,326 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:50:39,360 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:50:39,523 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:50:39,812 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:50:46,214 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-12 10:50:47,204 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-12 10:50:47,342 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-12 10:50:47,343 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-12 10:50:47,343 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-12 10:50:47,343 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-12 10:50:47,344 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-12 10:50:47,347 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-12 10:50:47,355 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-12 10:50:47,359 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-12 10:50:47,359 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-12 10:50:47,360 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-12 10:50:47,363 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-12 10:50:47,363 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-12 10:50:47,364 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-12 10:50:47,367 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-12 10:50:47,367 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-12 10:50:47,368 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-12 10:50:47,368 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-12 10:50:47,369 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-12 10:50:47,369 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-12 10:50:47,371 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-12 10:50:47,371 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-12 10:50:47,374 INFO ddos_app.db - Executed 21 statements from ddl.sql
2025-10-12 10:50:47,375 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-12 10:50:47,375 INFO ddos_app.db - Create schema done: statements=21
2025-10-12 10:52:20,930 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:52:20,964 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:52:21,031 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:52:21,325 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:52:28,623 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" DROP COLUMN "id" params=()
2025-10-12 10:52:31,500 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" DROP COLUMN "created_at" params=()
2025-10-12 10:52:33,245 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:52:33,278 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:52:33,343 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:52:33,605 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:52:37,059 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 10:52:37,279 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'domain_state_log')
2025-10-12 10:52:39,162 INFO ddos_app.db - TXN: ALTER TABLE app."domain_state_log" DROP COLUMN "id" params=()
2025-10-12 10:55:11,477 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:55:11,511 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:55:14,706 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 10:55:21,189 INFO ddos_app.db - SELECT: SELECT * FROM app.domain_state_log LIMIT 500 params=()
2025-10-12 10:56:02,010 INFO ddos_app.db - DML: add_domain user_id=1 domain=asd.re
2025-10-12 10:56:10,123 INFO ddos_app.db - DML: add_domain user_id=1 domain=sdg.wt
2025-10-12 10:56:12,600 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:56:12,635 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:56:15,984 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 10:56:17,737 INFO ddos_app.db - SELECT: SELECT * FROM app.domain_state_log LIMIT 500 params=()
2025-10-12 10:56:23,579 INFO ddos_app.db - SELECT: SELECT * FROM app.domain_state_log LIMIT 500 params=()
2025-10-12 10:56:28,341 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 10:56:28,475 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 10:56:28,541 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 10:56:28,801 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 10:56:33,356 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 10:56:33,515 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'protected_column')
2025-10-12 10:56:37,440 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 10:56:37,803 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'metric_sample')
2025-10-12 10:56:39,284 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 10:56:39,578 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'domain_state_log')
2025-10-12 10:56:41,102 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 10:56:41,421 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-12 10:56:49,501 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP COLUMN "current_state" params=()
2025-10-12 10:56:52,605 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP COLUMN "state_changed_at" params=()
2025-10-12 10:56:54,890 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP COLUMN "submitted_at" params=()
2025-10-12 10:56:57,004 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP COLUMN "id" params=()
2025-10-12 10:57:01,360 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 10:57:01,803 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'metric_sample')
2025-10-12 10:57:03,329 INFO ddos_app.db - TXN: ALTER TABLE app."metric_sample" DROP COLUMN "id" params=()
2025-10-12 10:57:13,875 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-12 10:57:14,746 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-12 10:57:14,780 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-12 10:57:14,781 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-12 10:57:14,781 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-12 10:57:14,781 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-12 10:57:14,782 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-12 10:57:14,784 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-12 10:57:14,790 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-12 10:57:14,794 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-12 10:57:14,794 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-12 10:57:14,795 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-12 10:57:14,797 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-12 10:57:14,798 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-12 10:57:14,798 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-12 10:57:14,801 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-12 10:57:14,801 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-12 10:57:14,802 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-12 10:57:14,802 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-12 10:57:14,803 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-12 10:57:14,804 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-12 10:57:14,805 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-12 10:57:14,806 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-12 10:57:14,808 INFO ddos_app.db - Executed 21 statements from ddl.sql
2025-10-12 10:57:14,811 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-12 10:57:14,811 INFO ddos_app.db - Create schema done: statements=21
2025-10-12 11:43:44,550 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:43:44,585 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:43:48,889 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user LIMIT 500 params=()
2025-10-12 11:43:51,821 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 11:43:53,012 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain LIMIT 500 params=()
2025-10-12 11:43:58,090 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:43:58,124 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:44:00,035 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 11:44:01,260 INFO ddos_app.db - SELECT: SELECT * FROM app.protected_column LIMIT 500 params=()
2025-10-12 11:49:18,452 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:49:18,487 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:49:18,525 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 11:49:18,562 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 11:49:18,599 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 11:49:18,639 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 11:49:45,074 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:49:45,107 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:49:45,175 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:49:45,367 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:49:49,988 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 11:49:50,209 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'domain_state_log')
2025-10-12 11:49:52,551 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 11:49:52,895 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'metric_sample')
2025-10-12 11:49:54,472 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 11:49:54,632 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'protected_column')
2025-10-12 11:49:57,573 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 11:49:57,892 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-12 11:51:40,226 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-12 11:51:43,879 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-12 11:51:43,913 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-12 11:51:43,914 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-12 11:51:43,914 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-12 11:51:43,914 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-12 11:51:43,915 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-12 11:51:43,917 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-12 11:51:43,923 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-12 11:51:43,926 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-12 11:51:43,927 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-12 11:51:43,928 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-12 11:51:43,930 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-12 11:51:43,931 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-12 11:51:43,932 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-12 11:51:43,934 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-12 11:51:43,935 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-12 11:51:43,936 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-12 11:51:43,936 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-12 11:51:43,937 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-12 11:51:43,937 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-12 11:51:43,939 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-12 11:51:43,939 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-12 11:51:43,941 INFO ddos_app.db - Executed 21 statements from ddl.sql
2025-10-12 11:51:43,942 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-12 11:51:43,943 INFO ddos_app.db - Create schema done: statements=21
2025-10-12 11:51:47,609 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:51:47,642 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:51:47,679 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 11:51:47,716 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 11:51:47,753 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 11:51:47,892 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 11:51:54,241 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:51:54,275 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:51:54,340 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:51:54,529 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:51:59,130 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 11:51:59,551 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'domain_state_log')
2025-10-12 11:52:01,039 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 11:52:01,583 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'metric_sample')
2025-10-12 11:52:02,957 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 11:52:03,116 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'protected_column')
2025-10-12 11:52:04,274 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 11:52:04,596 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-12 11:52:12,967 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:52:13,001 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:52:13,038 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 11:52:13,075 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 11:52:13,113 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 11:52:13,152 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 11:52:13,190 INFO ddos_app.db - SELECT: SELECT n.nspname AS schema_name, c.relname AS table_name, a.attname AS column_name FROM pg_constraint con JOIN pg_class c ON c.oid = con.conrelid JOIN pg_namespace n ON n.oid = c.r params=('app',)
2025-10-12 11:52:16,779 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:52:16,912 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:52:16,976 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:52:17,166 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:52:21,616 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 11:52:21,837 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'domain_state_log')
2025-10-12 11:52:22,883 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 11:52:23,330 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'metric_sample')
2025-10-12 11:52:23,981 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 11:52:24,142 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'protected_column')
2025-10-12 11:52:25,920 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 11:52:26,143 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-12 11:52:27,469 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP COLUMN "submitted_at" params=()
2025-10-12 11:52:30,032 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP COLUMN "current_state" params=()
2025-10-12 11:52:31,860 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP COLUMN "state_changed_at" params=()
2025-10-12 11:52:36,945 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:52:36,979 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:52:37,044 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:52:37,234 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:54:30,575 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ADD COLUMN "chech" text params=()
2025-10-12 11:54:37,169 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:54:37,203 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:54:37,268 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:54:37,490 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:54:49,451 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" RENAME COLUMN "chech" TO "chec" params=()
2025-10-12 11:54:50,676 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:54:50,709 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:54:50,774 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:54:51,096 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:55:01,068 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" SET NOT NULL params=()
2025-10-12 11:55:04,867 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" DROP NOT NULL params=()
2025-10-12 11:55:06,559 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:55:06,592 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:55:06,657 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:55:06,877 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:55:21,537 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" SET DEFAULT Goy params=()
2025-10-12 11:55:24,834 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" DROP DEFAULT params=()
2025-10-12 11:55:26,589 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:55:26,623 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:55:26,687 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:55:26,906 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:55:33,471 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" SET NOT NULL params=()
2025-10-12 11:55:35,713 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" SET NOT NULL params=()
2025-10-12 11:55:37,479 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" DROP NOT NULL params=()
2025-10-12 11:55:39,241 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:55:39,274 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:55:39,339 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:55:39,658 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:55:42,682 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "created_at" SET NOT NULL params=()
2025-10-12 11:55:44,361 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:55:44,395 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:55:44,460 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:55:44,682 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:55:50,884 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" SET NOT NULL params=()
2025-10-12 11:56:01,637 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" SET DEFAULT 'asd' params=()
2025-10-12 11:56:03,080 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:56:03,113 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-12 11:56:03,178 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:56:03,598 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-12 11:56:09,782 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" SET NOT NULL params=()
2025-10-12 11:56:11,764 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chec" SET NOT NULL params=()
2025-10-12 11:57:51,336 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ADD CONSTRAINT "app_user_isAdmin" CHECK(user, NOT NULL) params=()
2025-10-12 11:59:09,537 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 11:59:09,978 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'metric_sample')
2025-10-12 11:59:14,956 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:59:14,991 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:59:17,799 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "chec" FROM app.app_user LIMIT 500 params=()
2025-10-12 11:59:28,097 INFO ddos_app.db - DML: add_domain user_id=1 domain=asd.re
2025-10-12 11:59:29,894 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:59:29,928 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 11:59:32,806 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 11:59:35,704 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%as%',)
2025-10-12 11:59:37,785 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%AS%',)
2025-10-12 11:59:40,223 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ILIKE %s LIMIT 500 params=('%AS%',)
2025-10-12 11:59:42,417 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ~ %s LIMIT 500 params=('AS',)
2025-10-12 11:59:45,206 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ~ %s LIMIT 500 params=('as',)
2025-10-12 11:59:48,729 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ~* %s LIMIT 500 params=('AS',)
2025-10-12 11:59:51,588 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('AS',)
2025-10-12 11:59:52,404 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('AS',)
2025-10-12 11:59:53,844 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('as',)
2025-10-12 11:59:55,954 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~* %s LIMIT 500 params=('as',)
2025-10-12 11:59:57,201 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~* %s LIMIT 500 params=('AS',)
2025-10-12 11:59:59,450 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 11:59:59,484 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:02,180 INFO ddos_app.db - SELECT: SELECT "id" AS original, UPPER("id") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-12 12:00:04,633 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 12:00:07,183 INFO ddos_app.db - SELECT: SELECT "domain" AS original, UPPER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-12 12:00:09,059 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 12:00:09,092 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-12 12:00:09,129 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'app_user', 'app', 'app_user', 'app', 'app_user')
2025-10-12 12:00:09,171 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:09,213 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:09,253 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:09,294 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:15,534 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."app_user" L INNER JOIN app."app_user" R ON L."chec" = R."chec" LIMIT 500 params=()
2025-10-12 12:00:21,975 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'tracked_domain', 'app', 'app_user', 'app', 'tracked_domain')
2025-10-12 12:00:22,013 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:22,051 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 12:00:22,088 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:22,125 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 12:00:24,146 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."app_user" L INNER JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-12 12:00:36,751 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."app_user" L LEFT JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-12 12:00:41,527 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'metric_sample', 'app', 'app_user', 'app', 'metric_sample')
2025-10-12 12:00:41,565 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:41,603 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 12:00:41,641 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:41,678 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-12 12:00:43,555 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'domain_state_log', 'app', 'app_user', 'app', 'domain_state_log')
2025-10-12 12:00:43,593 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:43,731 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 12:00:43,768 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:43,805 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 12:00:45,156 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'protected_column', 'app', 'app_user', 'app', 'protected_column')
2025-10-12 12:00:45,194 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:45,231 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 12:00:45,268 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-12 12:00:45,405 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 12:00:48,501 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'tracked_domain', 'app', 'protected_column', 'app', 'tracked_domain', 'app', 'protected_column')
2025-10-12 12:00:48,542 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 12:00:48,580 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 12:00:48,618 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 12:00:48,656 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-12 12:00:49,619 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'tracked_domain', 'app', 'domain_state_log', 'app', 'tracked_domain', 'app', 'domain_state_log')
2025-10-12 12:00:49,657 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 12:00:49,694 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 12:00:49,732 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-12 12:00:49,769 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-12 12:00:52,196 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."tracked_domain" L LEFT JOIN app."domain_state_log" R ON L."id" = R."domain_id" LIMIT 500 params=()
2025-10-13 13:11:46,290 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:11:46,326 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-13 13:11:46,397 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:11:46,621 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:11:54,963 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-13 13:11:55,305 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'metric_sample')
2025-10-13 13:13:20,485 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:13:20,812 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-13 13:13:28,895 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP CONSTRAINT "chk_domain_format" params=()
2025-10-13 13:13:34,240 INFO ddos_app.db - DML: add_domain user_id=1 domain=1fsadga
2025-10-13 13:13:37,921 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:13:37,956 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-13 13:13:38,021 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:13:38,346 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:13:49,972 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ADD CONSTRAINT "chk_domain_format" CHECK (domain ~ '^[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)+$') params=()
2025-10-13 13:13:59,625 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ADD CONSTRAINT "chk_domain_format" CHECK (domain ~ '^[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)+$') params=()
2025-10-13 13:14:12,852 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:14:13,072 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-13 13:14:14,128 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" ADD CONSTRAINT "chk_domain_format" CHECK (domain ~ '^[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)+$') params=()
2025-10-13 13:14:27,862 INFO ddos_app.db - DML: delete_domain_by_name user_id=1 domain=1fsadga
2025-10-13 13:14:28,870 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:14:28,903 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-13 13:14:29,079 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:14:29,299 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:14:32,878 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:14:33,098 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-13 13:14:42,990 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" ADD CONSTRAINT "chk_domain_format" CHECK (domain ~ '^[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)+$') params=()
2025-10-13 13:14:46,891 INFO ddos_app.db - DML: add_domain user_id=1 domain=asf13
2025-10-13 13:14:46,895 ERROR ddos_app.db - add_domain ERROR: Нарушено ограничение CHECK.
2025-10-13 13:15:22,552 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:15:22,586 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-13 13:15:22,651 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:15:22,992 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:31:29,262 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:31:55,426 INFO ddos_app.db - TXN: ALTER TABLE app.app_user ADD COLUMN "chech" smallint params=()
2025-10-13 13:31:56,965 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:31:57,003 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:32:02,198 INFO ddos_app.db - SELECT: SELECT "chech", "chec" FROM app.app_user LIMIT 500 params=()
2025-10-13 13:32:05,534 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:36:19,397 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:36:19,466 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:36:27,984 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-13 13:36:30,396 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:36:43,519 INFO ddos_app.db - TXN: ALTER TABLE app.app_user ADD COLUMN "id" smallint params=()
2025-10-13 13:37:06,870 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:37:06,903 INFO ddos_app.db - SELECT: SELECT DISTINCT data_type AS typ FROM information_schema.columns UNION SELECT DISTINCT t.typname AS typ FROM pg_type t JOIN pg_namespace n ON n.oid=t.typnamespace WHERE t.typtype I params=()
2025-10-13 13:37:06,974 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:37:07,333 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:42:58,622 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:42:58,663 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:42:59,030 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:47:03,199 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:47:03,349 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:47:03,706 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:47:21,145 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ADD COLUMN "chek" integer[] params=()
2025-10-13 13:47:22,514 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:47:22,650 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:47:25,290 INFO ddos_app.db - SELECT: SELECT "chek" FROM app.app_user LIMIT 500 params=()
2025-10-13 13:47:36,697 INFO ddos_app.db - SELECT: SELECT "chek" FROM app.app_user LIMIT 500 params=()
2025-10-13 13:47:39,477 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:47:39,517 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:47:39,912 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:47:56,503 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chek" SET DEFAULT 1, 2, 3 params=()
2025-10-13 13:48:02,140 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chek" SET DEFAULT 1 params=()
2025-10-13 13:48:12,729 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chek" SET DEFAULT [1, 2] params=()
2025-10-13 13:48:22,072 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chek" SET DEFAULT (1, 2) params=()
2025-10-13 13:48:36,488 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chek" SET DEFAULT {1, 2} params=()
2025-10-13 13:49:20,161 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chek" SET DEFAULT '{1, 2}' params=()
2025-10-13 13:49:28,186 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:49:28,223 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:49:31,392 INFO ddos_app.db - SELECT: SELECT "chek" FROM app.app_user LIMIT 500 params=()
2025-10-13 13:49:35,290 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:49:35,432 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:49:35,719 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:49:44,245 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" DROP COLUMN "chek" params=()
2025-10-13 13:49:45,839 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:49:45,878 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:49:46,350 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:49:56,322 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" RENAME COLUMN "chec" TO "b" params=()
2025-10-13 13:49:57,504 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:49:57,544 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:49:57,803 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 13:50:05,127 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:50:05,266 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:50:09,891 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:50:12,461 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "id" LIKE %s LIMIT 500 params=('%a%',)
2025-10-13 13:50:16,257 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%a%',)
2025-10-13 13:50:20,180 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%A%',)
2025-10-13 13:50:22,100 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ILIKE %s LIMIT 500 params=('%A%',)
2025-10-13 13:50:24,349 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:50:26,152 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "id" ILIKE %s LIMIT 500 params=('%1%',)
2025-10-13 13:50:38,207 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "id" ILIKE %s LIMIT 500 params=('%"1"%',)
2025-10-13 13:50:45,232 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "login" ILIKE %s LIMIT 500 params=('%a%',)
2025-10-13 13:50:51,739 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "id" ILIKE %s LIMIT 500 params=('%1%',)
2025-10-13 13:50:54,787 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "id" ILIKE %s LIMIT 500 params=('%1%',)
2025-10-13 13:50:57,635 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "id" ILIKE %s LIMIT 500 params=('%1%',)
2025-10-13 13:51:01,878 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:51:03,320 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "id" ILIKE %s LIMIT 500 params=('%1%',)
2025-10-13 13:51:06,075 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "id" ~ %s LIMIT 500 params=('1',)
2025-10-13 13:51:11,151 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "user_id" ~ %s LIMIT 500 params=('a',)
2025-10-13 13:51:23,282 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "user_id" ~ %s LIMIT 500 params=('1',)
2025-10-13 13:51:26,903 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ~ %s LIMIT 500 params=('1',)
2025-10-13 13:51:28,811 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ~ %s LIMIT 500 params=('a',)
2025-10-13 13:51:31,740 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "submitted_at" ~ %s LIMIT 500 params=('1',)
2025-10-13 13:51:48,410 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "submitted_at" ~ %s LIMIT 500 params=('2025',)
2025-10-13 13:51:52,369 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "submitted_at" ~ %s LIMIT 500 params=("'2025'",)
2025-10-13 13:51:58,600 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "current_state" ~ %s LIMIT 500 params=('a',)
2025-10-13 13:52:02,903 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "current_state" ~ %s LIMIT 500 params=('active',)
2025-10-13 13:52:08,332 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "current_state" ~ %s LIMIT 500 params=("'active'",)
2025-10-13 13:52:12,257 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "current_state" ILIKE %s LIMIT 500 params=("%'active'%",)
2025-10-13 13:52:57,220 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:52:57,255 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:52:57,290 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'app_user', 'app', 'app_user', 'app', 'app_user')
2025-10-13 13:52:57,329 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:52:57,366 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:52:57,404 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:52:57,443 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:05,703 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'domain_state_log', 'app', 'app_user', 'app', 'domain_state_log')
2025-10-13 13:53:05,741 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:05,779 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-13 13:53:05,818 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:05,857 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-13 13:53:07,634 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'metric_sample', 'app', 'app_user', 'app', 'metric_sample')
2025-10-13 13:53:07,673 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:07,710 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-13 13:53:07,748 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:07,786 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-13 13:53:09,012 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'protected_column', 'app', 'app_user', 'app', 'protected_column')
2025-10-13 13:53:09,051 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:09,088 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-13 13:53:09,126 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:09,163 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-13 13:53:10,758 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'tracked_domain', 'app', 'app_user', 'app', 'tracked_domain')
2025-10-13 13:53:10,796 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:10,833 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:53:10,871 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:10,909 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:53:19,849 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."app_user" L INNER JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 13:53:21,947 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'app_user', 'app', 'app_user', 'app', 'app_user')
2025-10-13 13:53:21,986 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:22,024 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:22,061 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:22,098 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:33,666 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'domain_state_log', 'app', 'app_user', 'app', 'domain_state_log')
2025-10-13 13:53:33,705 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:33,744 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-13 13:53:33,781 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:33,820 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-13 13:53:35,970 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."app_user" L INNER JOIN app."domain_state_log" R ON L."id" = R."id" LIMIT 500 params=()
2025-10-13 13:53:40,912 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'metric_sample', 'app', 'app_user', 'app', 'metric_sample')
2025-10-13 13:53:40,951 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:41,090 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-13 13:53:41,230 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:41,267 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-13 13:53:41,953 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'protected_column', 'app', 'app_user', 'app', 'protected_column')
2025-10-13 13:53:41,992 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:42,028 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-13 13:53:42,066 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:42,103 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-13 13:53:46,013 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'tracked_domain', 'app', 'app_user', 'app', 'tracked_domain')
2025-10-13 13:53:46,053 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:46,091 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:53:46,131 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:53:46,168 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:53:46,703 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."app_user" L INNER JOIN app."domain_state_log" R ON L."id" = R."id" LIMIT 500 params=()
2025-10-13 13:53:47,785 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."app_user" L INNER JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 13:54:01,093 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:54:01,127 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:54:02,743 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:54:02,777 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:54:09,182 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:54:10,869 INFO ddos_app.db - SELECT: SELECT "domain" AS original, UPPER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:54:13,855 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LOWER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:54:15,571 INFO ddos_app.db - SELECT: SELECT "domain" AS original, SUBSTRING("domain" FROM %s FOR %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:54:18,253 INFO ddos_app.db - SELECT: SELECT "domain" AS original, TRIM("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:54:20,426 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:54:23,001 INFO ddos_app.db - SELECT: SELECT "domain" AS original, RPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:54:25,374 INFO ddos_app.db - SELECT: SELECT "domain" AS original, CONCAT("domain", %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:54:27,686 INFO ddos_app.db - SELECT: SELECT "domain" AS original, ("domain" || %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:54:31,056 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:54:34,748 INFO ddos_app.db - SELECT: SELECT "login" AS original, UPPER("login") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-13 13:54:43,504 INFO ddos_app.db - DML: add_domain user_id=1 domain=asdgfd.re
2025-10-13 13:54:52,429 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 13:54:52,465 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 13:54:55,037 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 13:54:58,371 INFO ddos_app.db - SELECT: SELECT "domain" AS original, UPPER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:55:03,649 INFO ddos_app.db - SELECT: SELECT "domain" AS original, TRIM("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:55:07,486 INFO ddos_app.db - SELECT: SELECT "domain" AS original, SUBSTRING("domain" FROM %s FOR %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:56:24,582 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:56:29,339 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:56:34,333 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:56:38,389 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:56:44,909 INFO ddos_app.db - SELECT: SELECT "domain" AS original, RPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:56:53,764 INFO ddos_app.db - SELECT: SELECT "domain" AS original, UPPER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:56:55,858 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LOWER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:56:58,024 INFO ddos_app.db - SELECT: SELECT "domain" AS original, SUBSTRING("domain" FROM %s FOR %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:57:00,390 INFO ddos_app.db - SELECT: SELECT "domain" AS original, TRIM("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:57:00,817 INFO ddos_app.db - SELECT: SELECT "domain" AS original, TRIM("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:57:04,043 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:57:06,379 INFO ddos_app.db - SELECT: SELECT "domain" AS original, RPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:57:08,582 INFO ddos_app.db - SELECT: SELECT "domain" AS original, CONCAT("domain", %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:57:11,278 INFO ddos_app.db - SELECT: SELECT "domain" AS original, ("domain" || %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 13:58:23,588 INFO ddos_app.db - SELECT: SELECT "domain" AS original, ("domain" || %s) AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:02:44,418 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 14:02:44,452 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:02:48,816 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 14:02:51,110 INFO ddos_app.db - SELECT: SELECT "id" AS original, UPPER("id") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:02:53,615 INFO ddos_app.db - SELECT: SELECT "domain" AS original, UPPER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:02:57,017 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LOWER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:02:59,380 INFO ddos_app.db - SELECT: SELECT "domain" AS original, TRIM("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:31:26,946 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 14:31:26,981 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:31:27,020 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:31:34,953 INFO ddos_app.db - SELECT: SELECT "id" AS original, UPPER("id") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-13 14:31:38,514 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 14:31:38,549 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:31:38,688 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:31:41,248 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 14:31:43,899 INFO ddos_app.db - SELECT: SELECT "domain" AS original, UPPER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:31:46,878 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LOWER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:31:53,376 INFO ddos_app.db - SELECT: SELECT "domain" AS original, SUBSTRING("domain" FROM %s) AS transformed FROM app.tracked_domain LIMIT 300 params=(2,)
2025-10-13 14:31:57,818 INFO ddos_app.db - SELECT: SELECT "domain" AS original, SUBSTRING("domain" FROM %s FOR %s) AS transformed FROM app.tracked_domain LIMIT 300 params=(2, 5)
2025-10-13 14:32:03,852 INFO ddos_app.db - SELECT: SELECT "domain" AS original, TRIM("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:32:10,660 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s) AS transformed FROM app.tracked_domain LIMIT 300 params=(10,)
2025-10-13 14:32:15,022 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s) AS transformed FROM app.tracked_domain LIMIT 300 params=(15,)
2025-10-13 14:32:16,984 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=(15, '0')
2025-10-13 14:32:22,486 INFO ddos_app.db - SELECT: SELECT "domain" AS original, RPAD("domain", %s, %s) AS transformed FROM app.tracked_domain LIMIT 300 params=(15, '0')
2025-10-13 14:33:20,318 INFO ddos_app.db - SELECT: SELECT "domain" AS original, CONCAT("domain", %s) AS transformed FROM app.tracked_domain LIMIT 300 params=("'aff'",)
2025-10-13 14:33:22,909 INFO ddos_app.db - SELECT: SELECT "domain" AS original, CONCAT("domain", %s) AS transformed FROM app.tracked_domain LIMIT 300 params=('aff',)
2025-10-13 14:33:27,381 INFO ddos_app.db - SELECT: SELECT "domain" AS original, CONCAT("domain", %s) AS transformed FROM app.tracked_domain LIMIT 300 params=('ret',)
2025-10-13 14:33:54,794 INFO ddos_app.db - SELECT: SELECT "domain" AS original, ("domain" || %s) AS transformed FROM app.tracked_domain LIMIT 300 params=('asd',)
2025-10-13 14:35:02,347 INFO ddos_app.db - SELECT: SELECT "domain" AS original, UPPER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:35:04,869 INFO ddos_app.db - SELECT: SELECT "domain" AS original, LOWER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
2025-10-13 14:35:13,314 INFO ddos_app.db - SELECT: SELECT "domain" AS original, CONCAT("domain", %s) AS transformed FROM app.tracked_domain LIMIT 300 params=('asdgfd.re',)
2025-10-13 14:35:19,389 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 14:35:19,424 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:35:23,045 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 14:35:25,230 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%asd%',)
2025-10-13 14:35:28,051 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%Asd%',)
2025-10-13 14:35:29,900 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ~ %s LIMIT 500 params=('Asd',)
2025-10-13 14:35:31,496 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ILIKE %s LIMIT 500 params=('%Asd%',)
2025-10-13 14:35:33,401 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ~* %s LIMIT 500 params=('Asd',)
2025-10-13 14:35:35,504 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('Asd',)
2025-10-13 14:35:36,592 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('Asd',)
2025-10-13 14:35:38,488 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~* %s LIMIT 500 params=('Asd',)
2025-10-13 14:35:41,279 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('asd',)
2025-10-13 14:35:43,848 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('b',)
2025-10-13 14:35:45,654 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('f',)
2025-10-13 14:35:47,954 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~* %s LIMIT 500 params=('f',)
2025-10-13 14:35:49,474 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~* %s LIMIT 500 params=('F',)
2025-10-13 14:35:51,471 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('F',)
2025-10-13 14:35:53,850 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ~ %s LIMIT 500 params=('a',)
2025-10-13 14:35:56,290 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 14:35:56,325 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:36:03,398 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 14:36:11,929 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:36:21,736 INFO ddos_app.db - SELECT: SELECT "id" FROM app.app_user WHERE is_admin = TRUE LIMIT 500 params=()
2025-10-13 14:36:29,996 INFO ddos_app.db - DML: register_user login=asd
2025-10-13 14:36:32,849 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 14:36:32,886 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:36:47,422 INFO ddos_app.db - SELECT: SELECT "id", "login" FROM app.app_user WHERE is_admin = TRUE LIMIT 500 params=()
2025-10-13 14:36:54,677 INFO ddos_app.db - SELECT: SELECT "id", "login" FROM app.app_user WHERE is_admin = FALSE LIMIT 500 params=()
2025-10-13 14:37:06,914 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE LIMIT 500 params=()
2025-10-13 14:37:19,975 INFO ddos_app.db - DML: register_user login=gsd
2025-10-13 14:37:25,464 INFO ddos_app.db - DML: register_user login=fsd
2025-10-13 14:37:27,497 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 14:37:27,532 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:37:36,234 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE LIMIT 500 params=()
2025-10-13 14:37:43,138 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:37:57,243 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:38:04,922 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user GROUP BY is_admin ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:38:18,799 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user GROUP BY is_admin ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:38:20,527 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:38:34,538 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user GROUP BY b ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:38:45,111 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user HAVING b ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:38:51,363 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user HAVING b NOT NULL ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:39:08,722 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user GROUP BY b HAVING b NOT NULL ORDER BY id DESC LIMIT 500 params=()
2025-10-13 14:39:31,963 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 14:39:32,002 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 14:39:32,263 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 14:41:19,020 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-13 14:41:19,184 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'protected_column')
2025-10-13 15:07:18,025 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:07:18,066 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:07:18,321 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:07:48,712 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:07:48,747 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:07:52,203 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user LIMIT 500 params=()
2025-10-13 15:07:58,412 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:07:58,560 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:07:58,918 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:08:11,476 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chech" TYPE integer params=()
2025-10-13 15:08:13,351 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:08:13,389 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:08:13,774 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:08:24,101 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" ALTER COLUMN "chech" SET DEFAULT 5 params=()
2025-10-13 15:08:30,645 INFO ddos_app.db - DML: register_user login=dgfsh
2025-10-13 15:08:38,878 INFO ddos_app.db - DML: register_user login=sdfq
2025-10-13 15:08:41,072 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:08:41,106 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:08:45,264 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user LIMIT 500 params=()
2025-10-13 15:08:55,007 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin =TRUE LIMIT 500 params=()
2025-10-13 15:09:02,837 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE LIMIT 500 params=()
2025-10-13 15:09:11,383 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE GROUP BY chech LIMIT 500 params=()
2025-10-13 15:09:25,597 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE GROUP BY b LIMIT 500 params=()
2025-10-13 15:09:51,834 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE GROUP BY is_admin LIMIT 500 params=()
2025-10-13 15:10:00,481 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE GROUP BY is_admin LIMIT 500 params=()
2025-10-13 15:10:05,975 INFO ddos_app.db - SELECT: SELECT "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_user WHERE is_admin = FALSE GROUP BY is_admin LIMIT 500 params=()
2025-10-13 15:10:08,636 INFO ddos_app.db - SELECT: SELECT "login", "password_hash", "is_admin", "created_at", "b", "chech", "id" FROM app.app_user WHERE is_admin = FALSE GROUP BY is_admin LIMIT 500 params=()
2025-10-13 15:10:20,196 INFO ddos_app.db - SELECT: SELECT "login", "password_hash", "is_admin", "created_at", "b", "chech", "id" FROM app.app_user WHERE is_admin = FALSE ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:10:55,180 INFO ddos_app.db - SELECT: SELECT "login", "password_hash", "is_admin", "created_at", "b", "chech", "id" FROM app.app_user WHERE is_admin = FALSE GROUP BY chech HAVING >2 ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:10:58,493 INFO ddos_app.db - SELECT: SELECT "login", "password_hash", "is_admin", "created_at", "b", "chech", "id" FROM app.app_user WHERE is_admin = FALSE GROUP BY chech ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:11:02,263 INFO ddos_app.db - SELECT: SELECT "login", "password_hash", "is_admin", "created_at", "b", "chech", "id" FROM app.app_user WHERE is_admin = FALSE ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:11:28,784 INFO ddos_app.db - SELECT: SELECT "login", "password_hash", "is_admin", "created_at", "b", "chech", "id" FROM app.app_user ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:11:34,546 INFO ddos_app.db - SELECT: SELECT "login", "password_hash", "is_admin", "created_at", "b", "chech", "id" FROM app.app_user GROUP BY is_admin ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:11:43,773 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "created_at", "b", "chech" FROM app.app_user GROUP BY is_admin ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:11:50,873 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "created_at", "b", "chech", "is_admin" FROM app.app_user GROUP BY is_admin ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:12:05,231 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "created_at", "b", "chech", "is_admin" FROM app.app_user GROUP BY id ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:12:22,497 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "created_at", "b", "chech", "is_admin" FROM app.app_user GROUP BY id HAVING >4 ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:13:15,810 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "created_at", "b", "chech", "is_admin" FROM app.app_user WHERE chech NOT NULL GROUP BY id ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:13:21,228 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "created_at", "b", "chech", "is_admin" FROM app.app_user WHERE chech IS NOT NULL GROUP BY id ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:13:40,445 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "created_at", "b", "chech", "is_admin" FROM app.app_user WHERE chech IS NOT NULL GROUP BY id HAVING id > 5 ORDER BY id DESC LIMIT 500 params=()
2025-10-13 15:14:20,456 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:14:20,495 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:14:20,853 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:14:28,653 INFO ddos_app.db - TXN: ALTER TABLE app."app_user" RENAME TO "app_users" params=()
2025-10-13 15:14:33,338 INFO ddos_app.db - DML: add_domain user_id=6 domain=asd.qw
2025-10-13 15:14:37,307 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:14:37,342 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_users')
2025-10-13 15:14:40,356 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at", "b", "chech" FROM app.app_users LIMIT 500 params=()
2025-10-13 15:14:50,247 ERROR ddos_app.db - ensure_admin_from_env: schema not ready
2025-10-13 15:14:54,016 INFO ddos_app.db - DML: register_user login=asd
2025-10-13 15:16:02,752 ERROR ddos_app.db - ensure_admin_from_env: schema not ready
2025-10-13 15:16:02,787 INFO ddos_app.db - AUTH ephemeral admin via .env
2025-10-13 15:16:07,325 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 15:16:07,359 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 15:16:07,361 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 15:16:07,361 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 15:16:07,361 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 15:16:07,362 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 15:16:07,365 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 15:16:07,371 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 15:16:07,375 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 15:16:07,376 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 15:16:07,377 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 15:16:07,380 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 15:16:07,380 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 15:16:07,381 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 15:16:07,383 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 15:16:07,384 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-13 15:16:07,385 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-13 15:16:07,385 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-13 15:16:07,386 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-13 15:16:07,387 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-13 15:16:07,389 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-13 15:16:07,390 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-13 15:16:07,392 INFO ddos_app.db - Executed 21 statements from ddl.sql
2025-10-13 15:16:07,393 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-13 15:16:07,393 INFO ddos_app.db - Create schema done: statements=21
2025-10-13 15:16:15,695 INFO ddos_app.db - DML: add_domain user_id=1 domain=asd.re
2025-10-13 15:16:17,621 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:16:17,660 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:16:17,854 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:44:52,248 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-13 15:44:53,202 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 15:44:53,245 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 15:44:53,246 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 15:44:53,246 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 15:44:53,246 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 15:44:53,247 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 15:44:53,249 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 15:44:53,255 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 15:44:53,258 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 15:44:53,259 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 15:44:53,260 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 15:44:53,262 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 15:44:53,263 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 15:44:53,263 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 15:44:53,266 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 15:44:53,266 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-13 15:44:53,267 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-13 15:44:53,267 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-13 15:44:53,268 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-13 15:44:53,268 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-13 15:44:53,270 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-13 15:44:53,270 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-13 15:44:53,271 INFO ddos_app.db - DDL/DML: CREATE TABLE IF NOT EXTSTS exp_table( id BIGSERIAL PRIMARY KEY, text TEXT NOT NULL DEFAULT('text'), num INTEGER NOT NULL DEFAULT(10) )
2025-10-13 15:44:53,278 ERROR ddos_app.db - exec_sql_file ERROR: ОШИБКА:  ошибка синтаксиса (примерное положение: "EXTSTS")
LINE 1: CREATE TABLE IF NOT EXTSTS exp_table(
                            ^

2025-10-13 15:44:53,278 ERROR ddos_app.db - exec_sql_file stack
Traceback (most recent call last):
  File "C:\Users\flexx\Downloads\src_fixed\src\db.py", line 202, in exec_sql_file
    cur.execute(st)
    ~~~~~~~~~~~^^^^
psycopg2.errors.SyntaxError: ОШИБКА:  ошибка синтаксиса (примерное положение: "EXTSTS")
LINE 1: CREATE TABLE IF NOT EXTSTS exp_table(
                            ^

2025-10-13 15:45:10,242 ERROR ddos_app.db - ensure_admin_from_env: schema not ready
2025-10-13 15:45:10,393 INFO ddos_app.db - AUTH ephemeral admin via .env
2025-10-13 15:45:13,562 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 15:45:13,710 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 15:45:13,711 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 15:45:13,712 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 15:45:13,712 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 15:45:13,712 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 15:45:13,714 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 15:45:13,720 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 15:45:13,724 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 15:45:13,725 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 15:45:13,725 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 15:45:13,728 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 15:45:13,728 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 15:45:13,729 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 15:45:13,732 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 15:45:13,732 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-13 15:45:13,733 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-13 15:45:13,733 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-13 15:45:13,734 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-13 15:45:13,734 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-13 15:45:13,736 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-13 15:45:13,736 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-13 15:45:13,737 INFO ddos_app.db - DDL/DML: CREATE TABLE IF NOT EXISTS exp_table( id BIGSERIAL PRIMARY KEY, text TEXT NOT NULL DEFAULT('text'), num INTEGER NOT NULL DEFAULT(10) )
2025-10-13 15:45:13,740 INFO ddos_app.db - Executed 22 statements from ddl.sql
2025-10-13 15:45:13,742 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-13 15:45:13,742 INFO ddos_app.db - Create schema done: statements=22
2025-10-13 15:45:17,695 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:45:17,735 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:45:18,029 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:47:00,211 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:47:00,248 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:47:40,383 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-13 15:47:41,278 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 15:47:41,433 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 15:47:41,434 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 15:47:41,434 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 15:47:41,434 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 15:47:41,435 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 15:47:41,437 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 15:47:41,443 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 15:47:41,447 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 15:47:41,447 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 15:47:41,448 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 15:47:41,450 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 15:47:41,451 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 15:47:41,452 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 15:47:41,455 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 15:47:41,455 INFO ddos_app.db - DDL/DML: CREATE TABLE IF NOT EXISTS exp_table( id BIGSERIAL PRIMARY KEY, text TEXT NOT NULL DEFAULT('text'), num INTEGER NOT NULL DEFAULT(10) ) -- ===== функция смены статуса ===== CREATE O
2025-10-13 15:47:41,461 ERROR ddos_app.db - exec_sql_file ERROR: ОШИБКА:  ошибка синтаксиса (примерное положение: "CREATE")
LINE 8: CREATE OR REPLACE FUNCTION app.fn_set_domain_state(
        ^

2025-10-13 15:47:41,461 ERROR ddos_app.db - exec_sql_file stack
Traceback (most recent call last):
  File "C:\Users\flexx\Downloads\src_fixed\src\db.py", line 202, in exec_sql_file
    cur.execute(st)
    ~~~~~~~~~~~^^^^
psycopg2.errors.SyntaxError: ОШИБКА:  ошибка синтаксиса (примерное положение: "CREATE")
LINE 8: CREATE OR REPLACE FUNCTION app.fn_set_domain_state(
        ^

2025-10-13 15:47:50,402 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 15:47:50,436 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 15:47:50,437 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 15:47:50,437 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 15:47:50,437 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 15:47:50,438 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 15:47:50,440 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 15:47:50,446 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 15:47:50,449 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 15:47:50,450 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 15:47:50,451 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 15:47:50,453 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 15:47:50,454 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 15:47:50,455 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 15:47:50,457 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 15:47:50,458 INFO ddos_app.db - DDL/DML: CREATE TABLE IF NOT EXISTS exp_table( id BIGSERIAL PRIMARY KEY, text TEXT NOT NULL DEFAULT('text'), num INTEGER NOT NULL DEFAULT(10) ) -- ===== функция смены статуса ===== CREATE O
2025-10-13 15:47:50,464 ERROR ddos_app.db - exec_sql_file ERROR: ОШИБКА:  ошибка синтаксиса (примерное положение: "CREATE")
LINE 8: CREATE OR REPLACE FUNCTION app.fn_set_domain_state(
        ^

2025-10-13 15:47:50,464 ERROR ddos_app.db - exec_sql_file stack
Traceback (most recent call last):
  File "C:\Users\flexx\Downloads\src_fixed\src\db.py", line 202, in exec_sql_file
    cur.execute(st)
    ~~~~~~~~~~~^^^^
psycopg2.errors.SyntaxError: ОШИБКА:  ошибка синтаксиса (примерное положение: "CREATE")
LINE 8: CREATE OR REPLACE FUNCTION app.fn_set_domain_state(
        ^

2025-10-13 15:48:09,454 ERROR ddos_app.db - ensure_admin_from_env: schema not ready
2025-10-13 15:48:09,488 INFO ddos_app.db - AUTH ephemeral admin via .env
2025-10-13 15:48:11,921 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 15:48:11,958 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 15:48:11,960 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 15:48:11,960 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 15:48:11,960 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 15:48:11,960 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 15:48:11,962 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 15:48:11,968 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 15:48:11,972 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 15:48:11,972 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 15:48:11,973 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 15:48:11,975 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 15:48:11,976 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 15:48:11,977 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 15:48:11,980 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 15:48:11,980 INFO ddos_app.db - DDL/DML: CREATE TABLE IF NOT EXISTS exp_table( id BIGSERIAL PRIMARY KEY, text TEXT NOT NULL DEFAULT('text'), num INTEGER NOT NULL DEFAULT(10) )
2025-10-13 15:48:11,980 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-13 15:48:11,981 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-13 15:48:11,982 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-13 15:48:11,982 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-13 15:48:11,983 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-13 15:48:11,984 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-13 15:48:11,985 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-13 15:48:11,987 INFO ddos_app.db - Executed 22 statements from ddl.sql
2025-10-13 15:48:11,988 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-13 15:48:11,988 INFO ddos_app.db - Create schema done: statements=22
2025-10-13 15:48:13,591 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:48:13,732 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:48:14,028 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:48:27,341 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:48:27,375 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:49:39,817 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-13 15:49:40,712 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 15:49:40,757 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 15:49:40,758 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 15:49:40,758 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 15:49:40,758 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 15:49:40,758 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 15:49:40,761 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 15:49:40,767 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 15:49:40,771 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 15:49:40,771 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 15:49:40,772 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 15:49:40,774 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 15:49:40,775 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 15:49:40,776 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 15:49:40,778 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 15:49:40,779 INFO ddos_app.db - DDL/DML: CREATE TABLE IF NOT EXISTS exp_table( id BIGSERIAL PRIMARY KEY, text TEXT NOT NULL DEFAULT 'text', num INTEGER NOT NULL DEFAULT 10 )
2025-10-13 15:49:40,779 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-13 15:49:40,780 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-13 15:49:40,780 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-13 15:49:40,781 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-13 15:49:40,782 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-13 15:49:40,784 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-13 15:49:40,784 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-13 15:49:40,786 INFO ddos_app.db - Executed 22 statements from ddl.sql
2025-10-13 15:49:40,788 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-13 15:49:40,788 INFO ddos_app.db - Create schema done: statements=22
2025-10-13 15:49:43,028 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:49:43,067 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:49:43,369 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:49:47,301 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:49:47,451 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:50:43,249 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-13 15:50:44,157 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 15:50:44,205 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 15:50:44,206 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 15:50:44,206 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 15:50:44,206 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 15:50:44,206 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 15:50:44,209 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 15:50:44,216 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 15:50:44,220 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 15:50:44,221 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 15:50:44,221 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 15:50:44,224 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 15:50:44,225 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 15:50:44,225 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 15:50:44,227 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 15:50:44,228 INFO ddos_app.db - DDL/DML: CREATE TABLE IF NOT EXISTS app.exp_table( id BIGSERIAL PRIMARY KEY, text TEXT NOT NULL DEFAULT 'text', num INTEGER NOT NULL DEFAULT 10 )
2025-10-13 15:50:44,230 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-13 15:50:44,231 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-13 15:50:44,231 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-13 15:50:44,232 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-13 15:50:44,232 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-13 15:50:44,234 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-13 15:50:44,234 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-13 15:50:44,236 INFO ddos_app.db - Executed 22 statements from ddl.sql
2025-10-13 15:50:44,238 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-13 15:50:44,238 INFO ddos_app.db - Create schema done: statements=22
2025-10-13 15:50:45,777 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:50:45,819 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:50:46,130 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 15:50:50,848 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'exp_table')
2025-10-13 15:50:50,981 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'exp_table')
2025-10-13 15:50:54,846 INFO ddos_app.db - TXN: ALTER TABLE app."exp_table" RENAME TO "expa" params=()
2025-10-13 15:50:56,882 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 15:50:56,917 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 15:50:58,718 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'expa')
2025-10-13 16:00:19,056 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 16:00:19,099 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 16:00:19,394 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 16:00:42,190 INFO ddos_app.db - TXN: ALTER TABLE app."exp_table" RENAME TO "ads" params=()
2025-10-13 18:04:23,495 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:04:23,535 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:04:23,828 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 18:38:25,522 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:38:25,663 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:38:25,860 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 18:38:30,205 INFO ddos_app.db - SELECT: SELECT c.relname FROM pg_class c JOIN pg_namespace n ON n.oid = c.relnamespace LEFT JOIN pg_description d ON d.objoid = c.oid AND d.objsubid = 0 WHERE n.nspname = %s AND c.relkind  params=('app',)
2025-10-13 18:42:41,314 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:42:41,355 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:42:41,549 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 18:42:50,144 INFO ddos_app.db - TXN: ALTER TABLE app."expa" RENAME TO "exp_table" params=()
2025-10-13 18:42:51,476 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:42:51,515 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:42:51,709 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 18:43:06,967 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:43:07,287 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'tracked_domain')
2025-10-13 18:43:15,874 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP CONSTRAINT "tracked_domain_pkey" params=()
2025-10-13 18:43:23,102 INFO ddos_app.db - TXN: ALTER TABLE app."tracked_domain" DROP CONSTRAINT "tracked_domain_user_id_fkey" params=()
2025-10-13 18:43:34,111 INFO ddos_app.db - DDL: DROP SCHEMA IF EXISTS app CASCADE
2025-10-13 18:43:34,989 INFO ddos_app.db - Create schema start: ddl=ddl.sql demo=demo_data.sql
2025-10-13 18:43:35,024 INFO ddos_app.db - DDL/DML: -- ===== base ===== CREATE SCHEMA IF NOT EXISTS ext
2025-10-13 18:43:35,025 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA ext
2025-10-13 18:43:35,027 INFO ddos_app.db - DDL/DML: CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA ext
2025-10-13 18:43:35,027 INFO ddos_app.db - DDL/DML: CREATE SCHEMA IF NOT EXISTS app
2025-10-13 18:43:35,028 INFO ddos_app.db - DDL/DML: DO $do$ BEGIN BEGIN CREATE TYPE app.domain_state AS ENUM ('active','ddos','downtime'); EXCEPTION WHEN duplicate_object THEN NULL; END; END $do$ LANGUAGE plpgsql
2025-10-13 18:43:35,032 INFO ddos_app.db - DDL/DML: -- ===== users ===== CREATE TABLE IF NOT EXISTS app.app_user ( id BIGSERIAL PRIMARY KEY, login ext.citext NOT NULL UNIQUE, password_hash TEXT NOT NULL, is_admin BOOLEAN NOT NULL DE
2025-10-13 18:43:35,042 INFO ddos_app.db - DDL/DML: -- ===== tracked domains ===== CREATE TABLE IF NOT EXISTS app.tracked_domain ( id BIGSERIAL PRIMARY KEY, user_id BIGINT NOT NULL REFERENCES app.app_user(id) ON DELETE CASCADE, doma
2025-10-13 18:43:35,046 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_domain ON app.tracked_domain (lower(domain))
2025-10-13 18:43:35,047 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_tracked_domain_state ON app.tracked_domain (current_state)
2025-10-13 18:43:35,048 INFO ddos_app.db - DDL/DML: -- ===== журнал смен статусов ===== CREATE TABLE IF NOT EXISTS app.domain_state_log ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELET
2025-10-13 18:43:35,051 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_d_ts ON app.domain_state_log(domain_id, event_ts)
2025-10-13 18:43:35,052 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_domain_state_log_new ON app.domain_state_log(new_state)
2025-10-13 18:43:35,052 INFO ddos_app.db - DDL/DML: -- ===== метрики ===== CREATE TABLE IF NOT EXISTS app.metric_sample ( id BIGSERIAL PRIMARY KEY, domain_id BIGINT NOT NULL REFERENCES app.tracked_domain(id) ON DELETE CASCADE, ts TI
2025-10-13 18:43:35,055 INFO ddos_app.db - DDL/DML: CREATE INDEX IF NOT EXISTS idx_metric_sample_d_ts ON app.metric_sample(domain_id, ts)
2025-10-13 18:43:35,055 INFO ddos_app.db - DDL/DML: CREATE TABLE IF NOT EXISTS app.exp_table( id BIGSERIAL PRIMARY KEY, text TEXT NOT NULL DEFAULT 'text', num INTEGER NOT NULL DEFAULT 10 )
2025-10-13 18:43:35,057 INFO ddos_app.db - DDL/DML: -- ===== функция смены статуса ===== CREATE OR REPLACE FUNCTION app.fn_set_domain_state( p_domain_id BIGINT, p_new_state app.domain_state, p_ts TIMESTAMP DEFAULT now(), p_details J
2025-10-13 18:43:35,059 INFO ddos_app.db - DDL/DML: -- ===== представления ===== DROP VIEW IF EXISTS app.v_domain_current_state
2025-10-13 18:43:35,059 INFO ddos_app.db - DDL/DML: CREATE VIEW app.v_domain_current_state AS SELECT d.id AS domain_id, d.user_id, d.domain, d.current_state AS state, date_trunc('second', d.state_changed_at) AS started_at, date_trun
2025-10-13 18:43:35,060 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE VIEW app.v_ddos_events_last_hour AS SELECT d.domain, l.event_ts FROM app.domain_state_log l JOIN app.tracked_domain d ON d.id = l.domain_id WHERE l.new_state = 'd
2025-10-13 18:43:35,061 INFO ddos_app.db - DDL/DML: -- === Protected columns registry and event trigger === CREATE TABLE IF NOT EXISTS app.protected_column ( schema_name text NOT NULL, table_name text NOT NULL, column_name text NOT 
2025-10-13 18:43:35,063 INFO ddos_app.db - DDL/DML: CREATE OR REPLACE FUNCTION app.fn_block_protected_column_drop() RETURNS event_trigger LANGUAGE plpgsql AS $$ DECLARE r record; sch text; tbl text; col text; rsn text; BEGIN FOR r I
2025-10-13 18:43:35,064 INFO ddos_app.db - DDL/DML: DO $$ BEGIN IF NOT EXISTS ( SELECT 1 FROM pg_event_trigger WHERE evtname = 'trg_block_protected_column_drop' ) THEN CREATE EVENT TRIGGER trg_block_protected_column_drop ON sql_drop
2025-10-13 18:43:35,065 INFO ddos_app.db - Executed 22 statements from ddl.sql
2025-10-13 18:43:35,068 WARNING ddos_app.db - demo data file not found: demo_data.sql
2025-10-13 18:43:35,068 INFO ddos_app.db - Create schema done: statements=22
2025-10-13 18:43:38,619 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:43:38,657 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:43:38,847 INFO ddos_app.db - SELECT: SELECT con.conname FROM pg_constraint con JOIN pg_class rel ON rel.oid = con.conrelid JOIN pg_namespace n ON n.oid = rel.relnamespace WHERE n.nspname=%s AND rel.relname=%s ORDER BY params=('app', 'app_user')
2025-10-13 18:43:43,364 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:43:43,402 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:43:45,938 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:43:46,072 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:43:48,920 INFO ddos_app.db - SELECT: SELECT "id" FROM app.app_user LIMIT 500 params=()
2025-10-13 18:43:51,491 INFO ddos_app.db - SELECT: SELECT "id", "login", "password_hash", "is_admin", "created_at" FROM app.app_user LIMIT 500 params=()
2025-10-13 18:43:53,139 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:43:53,172 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:43:53,206 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'app_user', 'app', 'app_user', 'app', 'app_user')
2025-10-13 18:43:53,247 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:43:53,285 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:43:53,323 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:43:53,460 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:43:56,630 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."id" AS "R.id", R."login" params=()
2025-10-13 18:44:01,526 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."id" AS "R.id", R."login" params=()
2025-10-13 18:44:01,985 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."id" AS "R.id", R."login" params=()
2025-10-13 18:44:04,371 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'tracked_domain', 'app', 'app_user', 'app', 'tracked_domain')
2025-10-13 18:44:04,409 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:04,546 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:44:04,584 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:04,621 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:44:08,409 INFO ddos_app.db - SELECT: SELECT L.*, R.* FROM app."app_user" L LEFT JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:44:17,912 INFO ddos_app.db - DML: add_domain user_id=1 domain=ads.rew
2025-10-13 18:44:21,536 INFO ddos_app.db - DML: add_domain user_id=1 domain=asdg.ert
2025-10-13 18:44:24,220 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:44:24,254 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:26,118 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:44:26,152 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:29,179 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:44:29,214 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:44:29,250 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'app_user', 'app', 'app_user', 'app', 'app_user')
2025-10-13 18:44:29,290 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:29,430 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:29,470 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:29,510 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:32,137 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'tracked_domain', 'app', 'app_user', 'app', 'tracked_domain')
2025-10-13 18:44:32,175 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:32,211 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:44:32,250 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:44:32,287 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:44:37,652 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."id" AS "R.id", R."user_i params=()
2025-10-13 18:44:51,745 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L INNER JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:44:54,839 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L INNER JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:44:56,182 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L LEFT JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:44:56,931 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L LEFT JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:45:00,940 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L RIGHT JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:45:03,653 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L FULL JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:45:12,425 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."domain" AS "R.domain" FR params=()
2025-10-13 18:45:15,832 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."domain" AS "R.domain" FR params=()
2025-10-13 18:45:16,937 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."domain" AS "R.domain" FR params=()
2025-10-13 18:45:24,561 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."domain" AS "R.domain" FR params=()
2025-10-13 18:45:48,630 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at" FROM app."app_user" L INNER  params=()
2025-10-13 18:45:50,878 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."domain" AS "R.domain" FR params=()
2025-10-13 18:45:59,077 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."domain" AS "R.domain" FR params=()
2025-10-13 18:46:01,424 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at" FROM app."app_user" L LEFT J params=()
2025-10-13 18:46:04,164 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."domain" AS "R.domain" FR params=()
2025-10-13 18:46:06,731 INFO ddos_app.db - SELECT: SELECT L."id" AS "L.id", L."login" AS "L.login", L."password_hash" AS "L.password_hash", L."is_admin" AS "L.is_admin", L."created_at" AS "L.created_at", R."domain" AS "R.domain", R params=()
2025-10-13 18:46:21,713 INFO ddos_app.db - DML: register_user login=asd
2025-10-13 18:46:25,722 INFO ddos_app.db - DML: add_domain user_id=2 domain=fgd.wer
2025-10-13 18:46:27,970 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:46:28,004 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:46:28,039 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'app_user', 'app', 'app_user', 'app', 'app_user')
2025-10-13 18:46:28,077 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:28,114 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:28,150 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:28,188 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:31,108 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'tracked_domain', 'app', 'app_user', 'app', 'tracked_domain')
2025-10-13 18:46:31,146 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:31,282 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:46:31,320 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:31,358 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:46:36,482 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L INNER JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:46:40,829 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L INNER JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:46:41,984 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L LEFT JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:46:46,620 INFO ddos_app.db - DML: delete_domain_by_name user_id=2 domain=fgd.wer
2025-10-13 18:46:47,845 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:46:47,878 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:46:47,911 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'app_user', 'app', 'app_user', 'app', 'app_user')
2025-10-13 18:46:47,950 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:47,987 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:48,025 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:48,063 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:49,967 INFO ddos_app.db - SELECT: SELECT a_left.attname AS left_col, a_right.attname AS right_col FROM pg_constraint c JOIN pg_class r_right ON r_right.oid = c.conrelid JOIN pg_namespace n_right ON n_right.oid = r_ params=('app', 'app_user', 'app', 'tracked_domain', 'app', 'app_user', 'app', 'tracked_domain')
2025-10-13 18:46:50,005 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:50,043 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:46:50,081 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:46:50,119 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:46:53,513 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L INNER JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:46:56,392 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L LEFT JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:46:59,195 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L RIGHT JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:47:01,804 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L FULL JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:47:02,121 INFO ddos_app.db - SELECT: SELECT L."login" AS "L.login", R."domain" AS "R.domain" FROM app."app_user" L FULL JOIN app."tracked_domain" R ON L."id" = R."user_id" LIMIT 500 params=()
2025-10-13 18:47:16,984 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:47:17,017 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:47:21,790 INFO ddos_app.db - SELECT: SELECT * FROM app.app_user WHERE "is_admin" LIKE %s LIMIT 500 params=('%TRUE%',)
2025-10-13 18:47:27,696 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:47:30,456 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%as%',)
2025-10-13 18:47:35,523 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%f%',)
2025-10-13 18:47:37,209 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" LIKE %s LIMIT 500 params=('%d%',)
2025-10-13 18:47:41,525 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ILIKE %s LIMIT 500 params=('%d%',)
2025-10-13 18:47:42,731 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" ILIKE %s LIMIT 500 params=('%D%',)
2025-10-13 18:47:44,687 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~* %s LIMIT 500 params=('D',)
2025-10-13 18:47:46,847 INFO ddos_app.db - SELECT: SELECT * FROM app.tracked_domain WHERE "domain" !~ %s LIMIT 500 params=('D',)
2025-10-13 18:47:49,997 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:47:50,030 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:47:50,067 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:47:52,649 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:47:52,782 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:47:52,820 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:47:56,390 INFO ddos_app.db - SELECT: SELECT "id" AS original, UPPER("id") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-13 18:47:58,822 INFO ddos_app.db - SELECT: SELECT "login" AS original, UPPER("login") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-13 18:48:00,904 INFO ddos_app.db - SELECT: SELECT "password_hash" AS original, UPPER("password_hash") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-13 18:48:03,186 INFO ddos_app.db - SELECT: SELECT "is_admin" AS original, UPPER("is_admin") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-13 18:48:05,681 INFO ddos_app.db - SELECT: SELECT "created_at" AS original, UPPER("created_at") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-13 18:48:08,441 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-13 18:48:10,380 INFO ddos_app.db - SELECT: SELECT "id" AS original, UPPER("id") AS transformed FROM app.domain_state_log LIMIT 300 params=()
2025-10-13 18:48:13,389 INFO ddos_app.db - SELECT: SELECT "domain_id" AS original, UPPER("domain_id") AS transformed FROM app.domain_state_log LIMIT 300 params=()
2025-10-13 18:48:15,476 INFO ddos_app.db - SELECT: SELECT "prev_state" AS original, UPPER("prev_state") AS transformed FROM app.domain_state_log LIMIT 300 params=()
2025-10-13 18:52:05,213 INFO ddos_app.db - SELECT: SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema=%s AND table_type='BASE TABLE' ORDER BY 1,2 params=('app',)
2025-10-13 18:52:05,246 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:52:05,382 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'app_user')
2025-10-13 18:52:11,947 INFO ddos_app.db - SELECT: SELECT "password_hash" AS original, UPPER("password_hash") AS transformed FROM app.app_user LIMIT 300 params=()
2025-10-13 18:52:17,081 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'domain_state_log')
2025-10-13 18:52:26,194 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'exp_table')
2025-10-13 18:52:28,429 INFO ddos_app.db - SELECT: SELECT "text" AS original, UPPER("text") AS transformed FROM app.exp_table LIMIT 300 params=()
2025-10-13 18:52:31,243 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'metric_sample')
2025-10-13 18:52:39,600 INFO ddos_app.db - SELECT: SELECT "source" AS original, UPPER("source") AS transformed FROM app.metric_sample LIMIT 300 params=()
2025-10-13 18:52:42,599 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'protected_column')
2025-10-13 18:52:43,515 INFO ddos_app.db - SELECT: SELECT "schema_name" AS original, UPPER("schema_name") AS transformed FROM app.protected_column LIMIT 300 params=()
2025-10-13 18:52:45,032 INFO ddos_app.db - SELECT: SELECT "table_name" AS original, UPPER("table_name") AS transformed FROM app.protected_column LIMIT 300 params=()
2025-10-13 18:52:46,447 INFO ddos_app.db - SELECT: SELECT "column_name" AS original, UPPER("column_name") AS transformed FROM app.protected_column LIMIT 300 params=()
2025-10-13 18:52:47,905 INFO ddos_app.db - SELECT: SELECT "reason" AS original, UPPER("reason") AS transformed FROM app.protected_column LIMIT 300 params=()
2025-10-13 18:52:52,054 INFO ddos_app.db - SELECT: SELECT column_name, data_type, is_nullable, column_default, ordinal_position FROM information_schema.columns WHERE table_schema=%s AND table_name=%s ORDER BY ordinal_position params=('app', 'tracked_domain')
2025-10-13 18:52:55,350 INFO ddos_app.db - SELECT: SELECT "domain" AS original, UPPER("domain") AS transformed FROM app.tracked_domain LIMIT 300 params=()
